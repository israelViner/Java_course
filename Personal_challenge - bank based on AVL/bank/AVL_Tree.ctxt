#BlueJ class context
comment0.target=AVL_Tree
comment1.params=ID\ name
comment1.target=AVL_Tree(int,\ java.lang.String)
comment10.params=t
comment10.target=Node\ rotationRight(Node)
comment11.params=t
comment11.target=boolean\ isBalance(Node)
comment12.params=t
comment12.target=Node\ checkRotates(Node)
comment13.params=t
comment13.target=Node\ findSuccessor(Node)
comment14.params=
comment14.target=void\ inO()
comment15.params=t
comment15.target=void\ inOrder(Node)
comment16.params=
comment16.target=void\ newInO()
comment17.params=t
comment17.target=void\ newInorder(Node)
comment18.params=t
comment18.target=void\ pushLeftSide(Node)
comment19.params=
comment19.target=void\ postO()
comment2.params=
comment2.target=AVL_Tree()
comment20.params=t
comment20.target=void\ postOrder(Node)
comment21.params=
comment21.target=void\ preO()
comment22.params=t
comment22.target=void\ preOrder(Node)
comment23.params=
comment23.target=void\ levelO()
comment24.params=t
comment24.target=void\ levelOrder(Node)
comment3.params=ID
comment3.target=Node\ searchNode1(int)
comment4.params=ID\ t
comment4.target=Node\ searchNode(int,\ Node)
comment5.params=ID\ name
comment5.target=void\ addN(int,\ java.lang.String)
comment6.params=ID\ name\ t
comment6.target=Node\ addNode(int,\ java.lang.String,\ Node)
comment7.params=ID
comment7.target=void\ deleteNode1(int)
comment8.params=ID\ t
comment8.target=Node\ deleteNode(int,\ Node)
comment9.params=t
comment9.target=Node\ rotationLeft(Node)
numComments=25
